package com.sh303.common.domain;

/**
 * 常见错误代码枚举类
 */

public enum CommonErrorCode implements ErrorCode {

    ////////////////////////////////////短信成功编码 //////////////////////////
    SUCCESS(0, "成功"),

    ////////////////////////////////////公用异常编码 //////////////////////////
    E_100101(100101, "传入参数与接口不匹配"),
    E_100102(100102, "验证码错误"),
    E_100103(100103, "验证码为空"),
    E_100104(100104, "查询结果为空"),
    E_100105(100105, "ID格式不正确或超出Long存储范围"),
    E_100106(100106, "上传错误"),
    E_100107(100107, "发送验证码错误"),
    E_100108(100108, "传入对象为空"),
    E_100109(100109, "手机号格式不正确"),
    E_100110(100110, "用户名为空"),
    E_100111(100111, "密码为空"),
    E_100112(100112, "手机号为空"),
    E_100113(100113, "手机号已存在"),
    E_100114(100114, "用户名已存在"),
    E_100115(100115, "密码不正确"),

    ////////////////////////////////////SAAS服务异常编码110 //////////////////////////
    E_110001(110001, "账号不存在"),
    E_110002(110002, "角色编码在同一租户中已存在，不可重复"),
    E_110003(110003, "角色为空"),
    E_110004(110004, "角色已绑定账号，被使用中不可删除"),
    E_110005(110005, "权限集合为空"),
    E_110006(110006, "参数为空"),
    E_110007(110007, "未查询到租户关联的角色"),
    E_110008(110008, "账号被其他租户使用，不可删除"),


    ////////////////////////////////////文件上传下载删除异常编码600////////////////////
    E_600001(600001, "上传文件类型不是图片类型"),
    E_600002(600002, "校验文件内容出错"),
    E_600003(600003, "校验文件内容失败"),
    E_600004(600004, "上传文件失败"),
    E_600005(600005, "找不到节点或文件"),
    E_600006(600006, "下载文件失败"),
    E_600007(600007, "删除文件失败"),

    ////////////////////////////////////登录异常/////////////////////////////////////
    E_800001(800001, "未登录"),

    ////////////////////////////////////特殊异常编码/////////////////////////////////////
    E_999991(999991, "调用微服务-授权服务 被熔断"),

    E_NO_AUTHORITY(999997, "没有访问权限"),
    CUSTOM(999998, "自定义异常"),

    /////////////////////////////////////未知错误/////////////////////////////////
    UNKNOWN(999999, "未知错误");

    private int code;

    private String desc;

    private CommonErrorCode(int code, String desc) {
        this.code = code;
        this.desc = desc;
    }

    public static CommonErrorCode setErrorCode(int code) {
        for (CommonErrorCode commonErrorCode : CommonErrorCode.values()) {
            if (commonErrorCode.getCode() == code) {
                return commonErrorCode;
            }
        }
        return null;
    }

    @Override
    public int getCode() {
        return code;
    }

    @Override
    public String getDesc() {
        return desc;
    }
}
